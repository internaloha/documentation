(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{104:function(e,t,r){"use strict";r.d(t,"a",(function(){return l})),r.d(t,"b",(function(){return m}));var n=r(0),o=r.n(n);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=o.a.createContext({}),u=function(e){var t=o.a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},l=function(e){var t=u(e.components);return o.a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},f=o.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,c=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),l=u(r),f=n,m=l["".concat(c,".").concat(f)]||l[f]||d[f]||i;return r?o.a.createElement(m,a(a({ref:t},s),{},{components:r})):o.a.createElement(m,a({ref:t},s))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,c=new Array(i);c[0]=f;var a={};for(var p in t)hasOwnProperty.call(t,p)&&(a[p]=t[p]);a.originalType=e,a.mdxType="string"==typeof e?e:n,c[1]=a;for(var s=2;s<i;s++)c[s]=r[s];return o.a.createElement.apply(null,c)}return o.a.createElement.apply(null,r)}f.displayName="MDXCreateElement"},69:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return a})),r.d(t,"metadata",(function(){return p})),r.d(t,"toc",(function(){return s})),r.d(t,"default",(function(){return l}));var n=r(3),o=r(7),i=(r(0),r(104)),c=["components"],a={title:"Production"},p={unversionedId:"developers/production",id:"developers/production",isDocsHomePage:!1,title:"Production",description:'There is a bash script called run-scrapers.sh that is intended to invoke all of the scrapers in "production mode" and then generate statistics that will be committed to GitHub for future reference.  Currently, it looks like this:',source:"@site/docs/developers/production.md",slug:"/developers/production",permalink:"/documentation/docs/developers/production",version:"current",sidebar:"someSidebar",previous:{title:"Implementation",permalink:"/documentation/docs/developers/implementation"},next:{title:"Developer Tips",permalink:"/documentation/docs/developers/tips"}},s=[],u={toc:s};function l(e){var t=e.components,r=Object(o.a)(e,c);return Object(i.b)("wrapper",Object(n.a)({},u,r,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"There is a bash script called ",Object(i.b)("inlineCode",{parentName:"p"},"run-scrapers.sh"),' that is intended to invoke all of the scrapers in "production mode" and then generate statistics that will be committed to GitHub for future reference.  Currently, it looks like this:'),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-sh"},"#!/usr/bin/env bash\n\nnpm run scrape -- -cf true -s nsf -ml 100\nnpm run scrape -- -cf true -s simplyhired -ml 1000\nnpm run scrape -- -cf true -s apple -ml 40\nnpm run scrape -- -cf true -s ziprecruiter -ml 100\nnpm run scrape -- -cf true -s cisco -ml 20\n\nnpm run statistics -- -cf true\n\n")))}l.isMDXComponent=!0}}]);